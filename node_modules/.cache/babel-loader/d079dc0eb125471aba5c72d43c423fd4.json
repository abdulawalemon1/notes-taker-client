{"ast":null,"code":"var _jsxFileName = \"/home/emon/node_project/notes-taker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport InputForm from \"./components/inputForm/InputForm\";\nimport NoteCard from \"./components/noteCard/NoteCard\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetch(\"notes.json\").then(res => res.json()).then(data => setNotes(data));\n  }, []);\n  /*\n  1. here there will be a function named handleSearch\n  to handle search by query, and it will be passed as props to header\n   */\n\n  /*2. here there will be a function named handleDelete\n  to delete a note, and it will be passed as props to NoteCard that will be triggered using delete button.\n   */\n\n  /*\n  3. there will be a function named handleUpdate\n    to update data, and it will be passed as props to NoteCard and \n   later it will be passed to Update modal using props.\n  */\n\n  /*\n  4.  there will be a function named handlePost\n  to post data to backend, and it will be passed as props to InputFrom.\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1 row-cols-md-3 g-4 m-2\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(NoteCard, {\n        note: note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/emon/node_project/notes-taker/src/App.js"],"names":["logo","Header","InputForm","NoteCard","useEffect","useState","App","notes","setNotes","fetch","then","res","json","data","map","note"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEfK,IAAAA,KAAK,CAAC,YAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMG,IAAI,IAAEL,QAAQ,CAACK,IAAD,CAFpB;AAKA,GAPQ,EAON,EAPM,CAAT;AAQA;AACF;AACA;AACA;;AAUA;AACA;AACA;;AAYE;AACF;AACA;AACA;AACA;;AAQE;AACF;AACA;AACA;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA,gBACGN,KAAK,CAACO,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AACE,QAAA,IAAI,EAAEA;AADR;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAtEQT,G;;KAAAA,G;AAwET,eAAeA,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport InputForm from \"./components/inputForm/InputForm\";\nimport NoteCard from \"./components/noteCard/NoteCard\";\nimport { useEffect, useState } from \"react\";\n\n\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n\n   fetch(\"notes.json\")\n   .then(res=>res.json())\n   .then(data=>setNotes(data))\n\n    \n  }, []);\n  /*\n1. here there will be a function named handleSearch\nto handle search by query, and it will be passed as props to header\n\n  */\n  \n\n\n\n\n\n\n  \n/*2. here there will be a function named handleDelete\nto delete a note, and it will be passed as props to NoteCard that will be triggered using delete button.\n */\n\n\n\n\n\n\n\n\n\n\n\n  /*\n3. there will be a function named handleUpdate\n    to update data, and it will be passed as props to NoteCard and \n   later it will be passed to Update modal using props.\n */\n\n\n\n   \n\n\n\n  /*\n4.  there will be a function named handlePost\nto post data to backend, and it will be passed as props to InputFrom.\n */\n\n  \n\n  return (\n    <div className=\"App\">\n      <Header  />\n      <InputForm />\n      <div className=\"row row-cols-1 row-cols-md-3 g-4 m-2\">\n        {notes.map((note) => (\n          <NoteCard\n            note={note}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}